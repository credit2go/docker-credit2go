server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
    
		    # The operation name used for spans defaults to the name of the location
		    # block, but you can use this directive to customize it.
		    opentracing_operation_name $uri;

		    # Propagate the active span context upstream, so that the trace can be
		    # continued by the backend.
		    # See http://opentracing.io/documentation/pages/api/cross-process-tracing.html
		    opentracing_propagate_context;
        
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
		    # The operation name used for spans defaults to the name of the location
		    # block, but you can use this directive to customize it.
		    opentracing_operation_name $uri;

		    # Propagate the active span context upstream, so that the trace can be
		    # continued by the backend.
		    # See http://opentracing.io/documentation/pages/api/cross-process-tracing.html
		    opentracing_propagate_context;

        root   /usr/share/nginx/html;
    }

    location /status {
		    # The operation name used for spans defaults to the name of the location
		    # block, but you can use this directive to customize it.
		    opentracing_operation_name $uri;

		    # Propagate the active span context upstream, so that the trace can be
		    # continued by the backend.
		    # See http://opentracing.io/documentation/pages/api/cross-process-tracing.html
		    opentracing_propagate_context;    
    
        vhost_traffic_status_display;
        vhost_traffic_status_display_format html;
    }
        
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

